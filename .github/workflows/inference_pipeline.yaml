name: hourly-taxi-demand-inference-pipeline

on:
  workflow_run:
    workflows: ["hourly-taxi-demand-feature-pipeline"]
    types:
      - completed

  workflow_dispatch:

env:
  PYTHON_VERSION: 3.12
  POETRY_VERSION: 2.1.1
  POETRY_URL: https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py

jobs:
  inference_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Poetry cache depends on OS, Python version and Poetry version.
      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}

      # virtualenv cache should depend on OS, Python version and `poetry.lock` (and optionally site-packages)
      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: poetry install

      - name: execute python workflows from bash script
        env:
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        run: poetry run jupyter nbconvert --to notebook --execute notebooks/14_inference_pipeline.ipynb
